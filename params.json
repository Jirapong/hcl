{"name":"Harvest Command Line","tagline":"Command-line tool for manipulating Harvest timesheets","body":"# Harvest Command Line\r\n\r\nHCl is a command-line tool for interacting with Harvest time sheets using the\r\n[Harvest time tracking API][htt].\r\n\r\n[View this documentation online][rdoc].\r\n\r\n[![Build Status](https://travis-ci.org/zenhob/hcl.png?branch=master)](https://travis-ci.org/zenhob/hcl)\r\n[![Gem Version](https://badge.fury.io/rb/hcl.png)](http://badge.fury.io/rb/hcl)\r\n\r\n[htt]: http://www.getharvest.com/api/time_tracking\r\n[rdoc]: http://rdoc.info/github/zenhob/hcl/file/README.markdown\r\n\r\n## GETTING STARTED\r\n\r\nYou can install hcl directly from rubygems.org:\r\n\r\n    gem install hcl\r\n\r\nor you can install from source:\r\n\r\n    rake install\r\n\r\n## SYNOPSIS\r\n\r\n    hcl [start] @<task_alias> [+<time>] [<message>]\r\n    hcl note <message>\r\n    hcl stop [<message>]\r\n    hcl resume [@<task_alias>]\r\n    hcl log @<task_alias> [+<time>] [<message>]\r\n    hcl show [<date>]\r\n    hcl tasks [<project_code>]\r\n    hcl alias <task_alias> <project_id> <task_id>\r\n    hcl unalias <task_alias>\r\n    hcl aliases\r\n    hcl (cancel | nvm | oops)\r\n    hcl config\r\n    hcl status\r\n\r\n## DESCRIPTION\r\n\r\n### Available Projects and Tasks\r\n\r\nTo start a new timer you need to identify the project and task.\r\nThe tasks command displays a list of available tasks with their\r\nproject and task IDs.\r\n\r\n    hcl tasks\r\n\r\nYou can also pass a project code (this is the short optional code associated\r\nwith each project) to list only the tasks for that project.\r\n\r\n### Starting a Timer\r\n\r\nSince it's not practical to enter two long numbers every time you want to\r\nidentify a task, HCl supports task aliases:\r\n\r\n    hcl alias tacodev 1234 5678\r\n    hcl @tacodev Adding a new feature\r\n\r\n### Starting a Timer with Initial Time\r\n\r\nYou can also provide an initial time when starting a new timer.\r\nThis can be expressed in floating-point or HH:MM. The following two\r\ncommands are equivalent:\r\n\r\n    hcl @tacodev +0:15 Doing some stuff\r\n    hcl +.25 @tacodev Doing some stuff\r\n\r\n### Adding Notes to a Running Task\r\n\r\nWhile a task is running you can append lines to the task notes:\r\n\r\n    hcl note Then I did something else\r\n\r\n**Note** that `show` only displays the last line of the timer notes.\r\nYou can list all the notes for a running timer by issuing the note\r\ncommand without any arguments:\r\n\r\n    hcl note\r\n\r\n### Stopping a Timer\r\n\r\nThe following command will stop a running timer (currently only one timer at\r\na time is supported). You can provide a message when stopping a timer as\r\nwell:\r\n\r\n    hcl stop All done doing things\r\n\r\n### Resuming a Timer\r\n\r\nYou can resume a stopped timer. Specify a task to resume the last timer\r\nfor that task:\r\n\r\n    hcl resume\r\n    hcl resume @xdev\r\n\r\n### Canceling a Timer\r\n\r\nIf you accidentally started a timer that you didn't mean to, you can cancel\r\nit:\r\n\r\n    hcl cancel\r\n\r\nThis will delete the running timer, or the last-updated timer if one isn't\r\nrunning. You can also use `nvm` or `oops` instead of `cancel`.\r\n\r\n### Logging without Starting a Timer\r\n\r\nYou can log time and notes without leaving a timer running. It takes\r\nthe same arguments as start:\r\n\r\n    hcl log @xdev +1 Worked for an hour.\r\n\r\nThe above starts and immediately stops a one-hour timer with the given note.\r\n\r\n## ADVANCED USAGE\r\n\r\n### Bash Auto-completion of Task Aliases\r\n\r\nYou can enable auto-completion of task aliases by adding this to your shell\r\nconfiguration (note the backticks inside the double quotes):\r\n\r\n    complete -W \"`cat ~/.hcl/aliases`\" hcl\r\n\r\nWarning: You will need to have run `hcl` at least once to create the aliases\r\nfile. Without it, this command will fail with an error.\r\n\r\n### Configuration Profiles\r\n\r\nYou can modify your credentials with the `--reauth` option, and review them\r\nwith `hcl config`. If you'd rather store multiple configurations at\r\nonce, specify an alternate configuration directory in the environment as\r\n`HCL_DIR`. This can be used to interact with multiple harvest accounts at\r\nonce.\r\n\r\nHere is a shell alias `myhcl` with a separate configuration from the\r\nmain `hcl` command, and another command to configure alias completion:\r\n\r\n    alias myhcl=\"env HCL_DIR=~/.myhcl hcl\"\r\n    complete -W \"`cat ~/.myhcl/aliases`\" myhcl\r\n\r\nAdding something like the above to your bashrc will enable a new command,\r\n`myhcl`. When using `myhcl` you can use different credentials and aliases,\r\nwhile `hcl` will continue to function with your original configuration.\r\n\r\n### Interactive Console\r\n\r\nAn interactive Ruby console is provided to allow you to use the fairly\r\npowerful Harvest API client built into HCl, since not all of its\r\nfeatures are exposed via the command line. The current {HCl::App}\r\ninstance is available as `hcl`.\r\n\r\nIt's also possible to issue HCl commands directly (except `alias`, see\r\nbelow), or to query specific JSON end points and have the results\r\npretty-printed:\r\n\r\n    hcl console\r\n    hcl> show \"yesterday\"\r\n    # => prints yesterday's timesheet, note the quotes!\r\n    hcl> hcl.http.get('daily')\r\n    # => displays a pretty-printed version of the JSON output\r\n\r\nNote that the HCl internals may change without notice.\r\nAlso, commands (like `alias`) that are also reserved words in Ruby\r\ncan't be issued directly (use `send :alias` instead).\r\n\r\n### Date Formats\r\n\r\nDates can be expressed in a variety of ways. See the [Chronic documentation][cd]\r\nfor more information about available date input formats. The following\r\ncommands show the time sheet for the specified day:\r\n\r\n    hcl show yesterday\r\n    hcl show last friday\r\n    hcl show 2 days ago\r\n    hcl show 1 week ago\r\n\r\n[cd]: http://chronic.rubyforge.org/\r\n\r\n### Harvest service status\r\n\r\nHarvest provides a [status API], which you can query using the\r\n`hcl status` command. This will tell you whether Harvest itself is up and the\r\ncurrent response time, along with a timestamp of when it was last tested.\r\n\r\n[status API]: http://harveststatus.com/status_api\r\n\r\n## AUTHOR\r\n\r\nHCl was designed and implemented by [Zack Hobson][zgh].\r\n\r\n* Non-SSL support by [Michael Bleigh][mbleigh].\r\n* Resume command by [Brian Cooke][bricooke].\r\n* UI improvements by [Chris Scharf][scharfie].\r\n\r\nSee LICENSE for copyright details.\r\n\r\n[zgh]: http://github.com/zenhob\r\n[mbleigh]: http://github.com/mbleigh\r\n[bricooke]: http://github.com/bricooke\r\n[scharfie]: http://github.com/scharfie\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}